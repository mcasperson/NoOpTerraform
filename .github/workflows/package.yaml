# The following workflow provides an opinionated template you can customize for your own needs.
#
# If you are not an Octopus user, the "Push to Octopus", "Generate Octopus Deploy build information",
# and "Create Octopus Release" steps can be safely deleted.
#
# To configure Octopus, set the OCTOPUS_API_TOKEN secret to the Octopus API key, and
# set the OCTOPUS_SERVER_URL secret to the Octopus URL.
#
# Double check the "project" and "deploy_to" properties in the "Create Octopus Release" step
# match your Octopus projects and environments.
#
# Get a trial Octopus instance from https://octopus.com/start

permissions:
  id-token: write
  contents: write
  checks: write

name: Generic Build
'on':
  workflow_dispatch: {}
  push: {}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.14
        with:
          versionSpec: 5.x
      - id: determine_version
        name: Determine Version
        uses: gittools/actions/gitversion/execute@v0.9.14
        with:
          additionalArguments: /overrideconfig mode=Mainline
      - name: Install Octopus Deploy CLI
        uses: OctopusDeploy/install-octopus-cli-action@v1
        with:
          version: latest
      - name: Package
        run: |-
          octo pack \
           --id NoOpTerraform \
           --version ${{ steps.determine_version.outputs.semVer }} \
           --format zip \
           --overwrite \
           --include '**/*'
        shell: bash
      - name: Tag Release
        uses: mathieudutour/github-tag-action@v6.0
        with:
          custom_tag: ${{ steps.determine_version.outputs.semVer }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - id: create_release
        name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.determine_version.outputs.semVer }}+run${{ github.run_number }}-attempt${{ github.run_attempt }}
          release_name: Release ${{ steps.determine_version.outputs.semVer }} Run ${{ github.run_number }} Attempt ${{ github.run_attempt }}
          draft: 'false'
          prerelease: 'false'
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: NoOpTerraform.${{ steps.determine_version.outputs.semVer }}.zip
          asset_name: NoOpTerraform.${{ steps.determine_version.outputs.semVer }}.zip
          asset_content_type: application/octet-stream
      - name: Push packages to Octopus Deploy
        uses: OctopusDeploy/push-package-action@v2
        env:
          OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_TOKEN }}
          OCTOPUS_HOST: ${{ secrets.OCTOPUS_SERVER_URL }}
        with:
          packages: NoOpTerraform.${{ steps.determine_version.outputs.semVer }}.zip
          overwrite_mode: OverwriteExisting
      - name: Generate Octopus Deploy build information
        uses: OctopusDeploy/push-build-information-action@v1
        env:
          OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_TOKEN }}
          OCTOPUS_HOST: ${{ secrets.OCTOPUS_SERVER_URL }}
        with:
          version: ${{ steps.determine_version.outputs.semVer }}
          packages: NoOpTerraform
          overwrite_mode: OverwriteExisting
      - name: Create Octopus Release
        uses: OctopusDeploy/create-release-action@v1
        with:
          api_key: ${{ secrets.OCTOPUS_API_TOKEN }}
          project: NoOpTerraform
          server: ${{ secrets.OCTOPUS_SERVER_URL }}
          deploy_to: Development
          packages: NoOpTerraform:${{ steps.determine_version.outputs.semVer }}
